{"version":3,"sources":["components/counter/Counter.js","components/todo/AddToDoItems.js","components/todo/ToDoList.js","components/todo/ToDoFilters.js","components/todo/ToDoPage.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","AddCounter","setState","counters","concat","toConsumableArray","state","count","IncrementCounter","idx","myArray","DecrementCounter","_this2","mappedCounters","map","currentValueCounter","react_default","a","createElement","key","className","onClick","React","Component","AddToDoItems","type","placeholder","ToDoList","displayedItems","item","index","text","ToDoFilter","itemsLeft","filterFunction","href","ToDoPage","filter","statusType","filteredList","items","status","id","todo_AddToDoItems","todo_ToDoList","ToDoFilters","App","react_router_dom","to","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1e8efb4.chunk.js","sourcesContent":["import React from \"react\"\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      counters: [{ count: 0 }]\n    }\n  }\n\n  AddCounter = () => {\n    // console.log(\"AddCounter INVOKED!\");\n\n    // \"counters\" is the key in the constructor above\n    // spread over the object and add a new object with a\n    // key of \"count\" and a value of \"0\"\n    this.setState({ counters: [...this.state.counters, { count: 0 }] })\n  }\n  IncrementCounter = (idx) => {\n    // console.log(\"Increment Counter INVOKED!\");\n    // console.log(\"idx = \", idx);\n    // console.log(this.state.counters[idx]);\n    const myArray = [...this.state.counters]\n    myArray[idx].count++\n    this.setState({\n      counters: myArray\n    })\n  }\n  DecrementCounter = (idx) => {\n    // console.log(\"Decrement Counter INVOKED!\");\n    // console.log(\"idx = \", idx);\n    // console.log(this.state.counters[idx]);\n    const myArray = [...this.state.counters]\n    myArray[idx].count--\n    this.setState({\n      counters: myArray\n    })\n  }\n\n  render() {\n    const mappedCounters = this.state.counters.map((currentValueCounter, idx) => {\n      return (\n        <div key={idx} className=\"counterMain\">\n          <h1>Count: {currentValueCounter.count}</h1>\n          <button\n            onClick={() => {\n              this.IncrementCounter(idx)\n            }}\n          >\n            Increment\n          </button>\n          <button\n            onClick={() => {\n              this.DecrementCounter(idx)\n            }}\n          >\n            Decrement\n          </button>\n        </div>\n      )\n    })\n    return (\n      <div>\n        <button onClick={this.AddCounter}>Add Another Counter</button>\n        {mappedCounters}\n      </div>\n    )\n  }\n}\n\nexport default Counter\n","import React from \"react\"\n\nconst AddToDoItems = (props) => {\n  return (\n    <div className=\"add-todo-items\">\n      <input type=\"text\" placeholder=\"What needs to be done?\" />\n    </div>\n  )\n}\n\nexport default AddToDoItems\n","import React, { Component } from \"react\"\n\nconst ToDoList = (props) => {\n  return (\n    <div>\n      <ul>\n        {props.displayedItems.map((item, index) => {\n          return (\n            <li key={index}>\n              <label className=\"list-item\">{item.text}</label>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default ToDoList\n","import React, { Component } from \"react\"\n\nconst ToDoFilter = (props) => {\n  return (\n    <div>\n      <label className=\"items-left\">{`${props.itemsLeft} items left`}</label>\n      <ul>\n        <li>\n          <a onClick={() => props.filterFunction(\"All\")} href=\"#\">\n            All\n          </a>\n        </li>\n        <li>\n          <a onClick={() => props.filterFunction(\"Active\")} href=\"#\">\n            Active\n          </a>\n        </li>\n        <li>\n          <a onClick={() => props.filterFunction(\"Completed\")} href=\"#\">\n            Completed\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">Clear Completed</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default ToDoFilter\n","import React, { Component } from \"react\"\nimport AddToDoItems from \"./AddToDoItems\"\nimport ToDoList from \"./ToDoList\"\nimport ToDoFilters from \"./ToDoFilters\"\n\nclass ToDoPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [\n        { id: 1, text: \"Learn React\", status: \"Completed\" },\n        { id: 2, text: \"Build a todo app\", status: \"Active\" },\n        { id: 3, text: \"Profit\", status: \"\" },\n        { id: 4, text: \"Dinner\", status: \"Active\" },\n        { id: 5, text: \"Workout\", status: \"Active\" },\n        { id: 6, text: \"Homework\", status: \"Completed\" },\n        { id: 7, text: \"Walk the dog\", status: \"Completed\" }\n      ],\n      itemsLeft: 5,\n      displayedItems: [\n        { text: \"Learn React\" },\n        { text: \"Build a todo app\" },\n        { text: \"Profit\" },\n        { text: \"Dinner\" },\n        { text: \"Workout\" },\n        { text: \"Homework\" },\n        { text: \"Walk the dog\" }\n      ]\n    }\n  }\n\n  filter = (statusType) => {\n    let filteredList\n\n    if (statusType !== \"All\") {\n      filteredList = this.state.items.filter((item) => item.status === statusType)\n    } else filteredList = this.state.items\n    this.setState({ displayedItems: filteredList })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>todos</h1>\n        <AddToDoItems />\n        <ToDoList displayedItems={this.state.displayedItems} />\n        <ToDoFilters itemsLeft={this.state.itemsLeft} filterFunction={this.filter} />\n      </div>\n    )\n  }\n}\n\nexport default ToDoPage\n","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport \"react-router\"\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\nimport Counter from \"./components/counter/Counter\"\nimport ToDoPage from \"./components/todo/ToDoPage\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          {/* This is our Navigation Menu*/}\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/counter\">Counter</Link>\n            </li>\n            <li>\n              <Link to=\"/todopage\">ToDo</Link>\n            </li>\n          </ul>\n          {/* This is how we define what components should render based off of the url */}\n          {/* <Route exact path=\"/\" /> */}\n          <Route path=\"/counter\" component={Counter} />\n          <Route path=\"/todopage\" component={ToDoPage} />\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}